openapi: "3.0.2"
info:
  title: Vyom
  version: "1.0"

components:
  securitySchemes:
    bearerAuth:
      description: "#### Example: Bearer [TOKEN]"
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          example: hiren@mailinator.com
        otp:
          type: integer
          example: 9564
      required:
        - email
        - otp

  responses:
    Success:
      description: success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: success

paths:
  /auth/login:
    post:
      summary: Register - Login service
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: hiren
                email:
                  type: string
                  format: email
                  example: hiren@mailinator.com
              required:
                - email
                - name
      responses:
        "200":
          $ref: "#/components/responses/Success"

  /auth/guest/login:
    post:
      summary: Guest - Login service
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                  example: asghjdgajhksdasju

              required:
                - deviceId

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /auth/otp/verify:
    post:
      summary: Otp verification
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          $ref: "#/components/responses/Success"

  /auth/refresh-token:
    post:
      summary: Refresh token service
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: G4urR2TanUp92389lpvcN9a3oxeZMNnxzmn45iX764inPBl5r39EMhHFViexrBVNVI8NeKA8AtD
              required:
                - refreshToken

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /auth/logout:
    post:
      description: Logout
      summary: Logout
      tags:
        - Auth

      security:
        - bearerAuth: []

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzM3NDAxMjI3OGEzMGRiODUyYTM1N2MiLCJpYXQiOjE3MzE2Nzc5ODUsImV4cCI6MTczMjI4Mjc4NX0.yUkxGyGn-8ljEEjjEoSi5H2P_CocV2ptaMRCQz7O4Dw

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /user/profile:
    get:
      description: Profile
      summary: Profile
      tags:
        - User

      security:
        - bearerAuth: []

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /themes:
    get:
      summary: Retrieve All Themes
      description: Fetches a list of all available themes.
      tags:
        - Themes

      security:
        - bearerAuth: []

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /themes/{id}:
    get:
      summary: Retrieve Theme Details by Document ID
      description: Fetches theme details, including related modules, chapters, and images, based on the provided document ID.
      tags:
        - Themes

      security:
        - bearerAuth: []

      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the theme document
          schema:
            type: string
            example: ermegeyomkdcbx90t1h3cepf

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /pages/{chapterId}:
    get:
      description: Get pages or pages details by documentId By chapterId
      summary: Get pages or pages details by documentId By chapterId
      tags:
        - Pages

      security:
        - bearerAuth: []

      parameters:
        - name: chapterId
          in: path
          required: true
          description: Unique identifier of the chapter document
          schema:
            type: string
            example: o4hlnsuw3p3q1ry13c5twr5z
        - name: pageId
          in: query
          required: false
          description: Unique identifier of the page document
          schema:
            type: string

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /journey:
    post:
      summary: Add User Journey
      description: |
        This endpoint allows users to submit their journey progress by providing the page ID, question ID, selected answer options, and any custom input text. 
        The request requires authentication via a Bearer token.
      tags:
        - Journey

      security:
        - bearerAuth: []

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pageId:
                  type: string
                  example: "asghjdgajhksdasju"
                  description: "Unique identifier for the page."
                questionId:
                  type: string
                  example: "q12345"
                  description: "Unique identifier for the question."
                answerOptionId:
                  type: array
                  items:
                    type: string
                  description: "Array of selected answer option IDs."
                customInputText:
                  type: string
                  example: "User's custom response."
                  description: "Custom text input provided by the user."

              required:
                - pageId

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /modules:
    get:
      description: Get modules or details by documentId
      summary: Get modules or details by documentId
      tags:
        - Modules
      deprecated: false

      security:
        - bearerAuth: []

      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: string
            example: yl75z41kxc2buwv3sdwqv8r9

      responses:
        "200":
          $ref: "#/components/responses/Success"

  /chapters/{id}:
    get:
      description: Get chapters or chapter details by documentId
      summary: Get chapters or chapter details by documentId
      tags:
        - Chapters

      security:
        - bearerAuth: []

      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the chapter document
          schema:
            type: string
            example: yl75z41kxc2buwv3sdwqv8r9

      responses:
        "200":
          $ref: "#/components/responses/Success"
